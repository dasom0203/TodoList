plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.0'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'application'
}


application {
    mainClass = 'com.project.app.config.TodoApplication'  // 메인 클래스 경로로 변경
}

group = 'com.project'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}	

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot
	implementation 'org.springframework.boot:spring-boot-starter-web'
	
	// MySQL Connector
	runtimeOnly 'com.mysql:mysql-connector-j'
	
	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	
	// Mybatis 
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'//mybatis
	
	// Servlet API (jakarta)
    compileOnly 'jakarta.servlet:jakarta.servlet-api:5.0.0'
    
	// swagger (Spring 3.x.x 이상부터 SpringFox 대신 SpringDoC 사용)
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
	
	// lombok 라이브러리
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
 
	// lombok 테스트 라이브러리
	//testImplementation 'org.projectlombok:lombok'
	//testAnnotationProcessor 'org.projectlombok:lombok'	
   	
}

def webappDir = "$projectDir/src/main/front"

sourceSets {
	main {
		resources {
			srcDirs = ["$webappDir/build", "$projectDir/src/main/resources"]
		}
	}
}

processResources {
	dependsOn "buildReact"
}

task buildReact(type: Exec) {
	dependsOn "installReact"
	workingDir "$webappDir"
	inputs.dir "$webappDir"
	group = BasePlugin.BUILD_GROUP
		if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
			commandLine "npm.cmd", "run-script", "build"
		} else {
			commandLine "npm", "run-script", "build"
		}
}

task installReact(type: Exec) {
	workingDir "$webappDir"
	inputs.dir "$webappDir"
	group = BasePlugin.BUILD_GROUP
	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
		commandLine "npm.cmd", "audit", "fix"
		commandLine 'npm.cmd', 'install'
	} else {
		commandLine "npm", "audit", "fix"
		commandLine 'npm', 'install'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
